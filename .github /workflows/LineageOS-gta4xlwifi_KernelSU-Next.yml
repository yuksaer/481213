name: Build LineageOS 22.1 gta4xlwifi Kernel with KernelSU-Next

on:
  workflow_dispatch:

env:
  TZ: America/New_York

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=America/New_York date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=America/New_York date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python3 bc libc6-dev-i386 libncurses5-dev
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang from aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main-kernel-build-2023/clang-r487747c.tar.gz
        tar -C clang-aosp/ -zxvf clang-r487747c.tar.gz
    
    - name: Download Gcc from aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
          mkdir gcc-64
          wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
          tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
          mkdir gcc-32
          wget -O gcc-arm.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
          tar -C gcc-32/ -zxvf gcc-arm.tar.gz
    
    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/JacoaFur/android_kernel_samsung_gta4xl.git -b lineage-22.1 android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion

    - name: Setup KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        rm -rf KernelSU-Next
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
        KSU_VERSION_1=$(cd KernelSU-Next && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER_1=$KSU_VERSION_1" >> $GITHUB_ENV

    - name: Build kernel with KernelSU Next
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        export SUBARCH=arm
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-64/bin:$GITHUB_WORKSPACE/kernel_workspace/gcc-32/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="exynos9611-gta4xlwifi_defconfig"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

    - name: Check kernel output files for Kernel
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE_1=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi

    - name: Make AnyKernel3 with Kernel
      if: env.CHECK_IMAGE_1 == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/JacoaFur/AnyKernel3-Fork.git -b gta4xl --depth=1 AnyKernel3
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
        rm -rf AnyKernel3/.git*

    - name: Compress AnyKernel3 folder with Kernel to zip
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/AnyKernel3
        zip -r $GITHUB_WORKSPACE/AK3-LOS22.1-gta4xlwifi_KernelSU-Next_${{ env.KSUVER }}-${{ env.BUILD_TIME }}.zip ./*

    - name: Upload Image
      if: env.CHECK_IMAGE_1 == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-LOS22.1-gta4xlwifi_KernelSU-Next_${{ env.KSUVER_1 }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3 zip
      if: env.CHECK_IMAGE_1 == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-LOS22.1-gta4xlwifi_KernelSU-Next_${{ env.KSUVER_1 }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
